rootLogger: INFO, console, file

<% node.elasticsearch[:logging].sort.each do |key, value| %>
logger.<%= key %>: <%= value %>
<% end %>

additivity:
  index.search.slowlog: false
  index.indexing.slowlog: false

appender:
  console:
    type: console
    layout:
      type: consolePattern
      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"

  file:
    file: ${path.logs}/${cluster.name}.log
<% if node.elasticsearch[:logger][:useFileSize] %>
    maxBackupIndex: <%= node.elasticsearch[:logger][:maxBackup] %>
    maxFileSize: <%= node.elasticsearch[:logger][:maxSize] %>
    type: rollingFile
<% else %>
    type: dailyRollingFile
    datePattern: "<%= node.elasticsearch[:logger][:datePattern] %>"
<% end %>
    layout:
      type: pattern
      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"

  index_search_slow_log_file:
    file: ${path.logs}/${cluster.name}_index_search_slowlog.log
<% if node.elasticsearch[:logger][:useFileSize] %>
    maxBackupIndex: <%= node.elasticsearch[:logger][:maxBackup] %>
    maxFileSize: <%= node.elasticsearch[:logger][:maxSize] %>
    type: rollingFile
<% else %>
    datePattern: "<%= node.elasticsearch[:logger][:datePattern] %>"
    type: dailyRollingFile
<% end %>
    layout:
      type: pattern
      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"

  index_indexing_slow_log_file:
    file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log
<% if node.elasticsearch[:logger][:useFileSize] %>
    maxBackupIndex: <%= node.elasticsearch[:logger][:maxBackup] %>
    maxFileSize: <%= node.elasticsearch[:logger][:maxSize] %>
    type: rollingFile
<% else %>
    datePattern: "<%= node.elasticsearch[:logger][:datePattern] %>"
    type: dailyRollingFile
<% end %>
    layout:
      type: pattern
      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"
